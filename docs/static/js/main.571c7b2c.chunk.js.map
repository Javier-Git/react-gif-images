{"version":3,"sources":["components/AddCategory.js","helpers/getGif.js","components/GifImages.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","categorias","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","type","value","onChange","target","defaultProps","getImagenes","category","a","url","fetch","res","json","data","gif","map","img","id","title","images","downsized_medium","GifImages","imagenes","setImagenes","useEffect","then","className","src","alt","GifExpertApp","item","onClick","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,WAExC,EAAoCC,mBAAS,kCAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAE3BT,EAAc,CAACG,GAAF,mBAAiBF,KAC9BG,EAAc,MAKlB,SACG,uBACKM,KAAK,OACLC,MAAOR,EACPS,SAlBa,SAACN,GACtBF,EAAcE,EAAEO,OAAOF,aAgC/BZ,EAAYe,aAAe,G,2BCvBZC,EAjBE,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACVC,EADU,0FAC+EF,EAD/E,sBAGEG,MAAMD,GAHR,cAGVE,EAHU,gBAIMA,EAAIC,OAJV,uBAITC,EAJS,EAITA,KAEDC,EAAMD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAG,UAAEO,EAAIG,cAAN,aAAE,EAAYC,iBAAiBX,QAV1B,kBAcTK,GAdS,4CAAH,sDCGJO,EAAY,SAAC,GAAgB,IAAfd,EAAc,EAAdA,SAEvB,EAAgCd,mBAAS,IAAzC,mBAAO6B,EAAP,KAAiBC,EAAjB,KAMA,OAJAC,qBAAU,WACNlB,EAAYC,GAAUkB,KAAKF,KAC5B,CAAChB,IAGA,sBAAKmB,UAAU,OAAf,UACI,6BAAKnB,IACL,6BAEIe,EAASP,KAAI,gBAAEE,EAAF,EAAEA,GAAIC,EAAN,EAAMA,MAAOT,EAAb,EAAaA,IAAb,OAAsB,+BAAcS,EAAd,IAAqB,qBAAKS,IAAKlB,EAAKmB,IAAKV,MAAhCD,YCZ/CY,EAAe,WAExB,MAAoCpC,mBAAS,CAAC,gBAA9C,mBAAOD,EAAP,KAAmBD,EAAnB,KAMA,OACI,qCACA,8CACA,cAAC,EAAD,CACIA,cAAeA,EACfC,WAAYA,IAEhB,uBACA,6BAEOA,EAAWuB,KAAI,SAACe,GAAD,OACX,cAAC,EAAD,CAEKvB,SAAUuB,GADLA,QAMrB,wBAAQC,QAtBQ,SAACD,GACjBvC,EAAc,GAAD,mBAAKC,GAAL,CAAiB,cAqB9B,yBCzBRwC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.571c7b2c.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({setCategorias, categorias}) => {\n\n    const [inputValue, setinputValue] = useState('Puedes ingresar cualquier cosa');\n\n    const inputValueHandle = (e) => {\n        setinputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (inputValue.trim().length > 2) {\n            //setCategorias( cats => [...cats, inputValue]); IMPORTANTE!!!\n            setCategorias([inputValue, ...categorias, ]);\n            setinputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n           <input \n                type=\"text\"\n                value={inputValue}\n                onChange={inputValueHandle}\n           />\n        </form>\n    )\n}\n\n//PropTypes\n\nAddCategory.propTypes = {\n    setCategorias: PropTypes.func.isRequired,\n    categorias: PropTypes.array.isRequired\n}\n\n//DefaultProps\n\nAddCategory.defaultProps = {\n   \n}\n\n","const getImagenes = async (category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=l0AWGmGnUEXwTFAJCb9NI0Tg2mr4iOcW&q=${category}&limit=20`;\n\n    const res = await fetch(url);\n    const {data} =  await res.json();\n    \n    const gif = data.map((img) => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    });\n\n    return gif;\n}\n\nexport default getImagenes;","import React, { useEffect, useState } from 'react'\nimport getImagenes from '../helpers/getGif';\n\nexport const GifImages = ({category}) => {\n\n    const [imagenes, setImagenes] = useState([]);\n\n    useEffect(() => {\n        getImagenes(category).then(setImagenes);\n    }, [category]);\n\n    return (\n        <div className=\"card\">\n            <h3>{category}</h3>\n            <ol>\n            {\n                imagenes.map(({id, title, url}) => <li key={id}>{title} <img src={url} alt={title}></img></li>)\n            }\n            </ol>\n        </div>\n    )\n}\n","import { useState } from 'react';\nimport { AddCategory } from './AddCategory';\nimport { GifImages } from './GifImages';\n\nexport const GifExpertApp = () => {\n\n    const [categorias, setCategorias] = useState(['Dragon Ball']);\n\n    const addCategory = (item) => {\n        setCategorias([...categorias, 'Digimon']);\n    }\n\n    return (\n        <>\n        <h2>GifExpertApp</h2>\n        <AddCategory \n            setCategorias={setCategorias}\n            categorias={categorias}\n        />\n        <hr/>\n        <ol>\n           {\n               categorias.map((item) =>\n                   <GifImages \n                        key={item}\n                        category={item}\n                   />\n               )\n           }\n        </ol>\n        <button onClick={ addCategory }>Agragar</button>\n        </>\n    );\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './components/GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}